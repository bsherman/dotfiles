# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
    else
    color_prompt=
    fi
fi

# Add branch to PS1 (based on $PS1 or $1), formatted as $2
export GIT_PS1_SHOWDIRTYSTATE=yes
if [ "$color_prompt" = yes ]; then
    PS1='\[\033[01;34m\]\u@\h\[\033[00m\]:\[\033[00;32m\]\w\[\033[0;31m\]$(be_get_branch "(%s)")\[\033[33m\]\$\[\033[00m\] '
    PS1='\[\033[00;35m\]\t\[\033[00m\] `if [ $? = 0 ]; then echo "\[\e[32m\]✔"; else echo "\[\e[01;31m\]✘"; fi` '$PS1
    PS1="\[\e]0;\u@\h: \w\a\]$PS1"
else
    PS1='\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac